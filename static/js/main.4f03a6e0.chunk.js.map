{"version":3,"sources":["lib/utils/index.ts","components/AddCourseForm/index.tsx","components/Course/index.tsx","components/CourseList/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getCredits","courses","credits","course","counted","credit","getGPA","scale","length","gradeSum","getGrade","grade","getDisplayedGrade","gradeLetters","extendedGradeLetters","AddCourseForm","addCourse","useState","courseName","setCourseName","setCredit","setGrade","useEffect","gradeInput","gradeOptions","map","value","type","aria-label","placeholder","required","onChange","e","target","className","name","onSubmit","preventDefault","creditNumber","Number","isNaN","alert","gradeNumber","getGradeNumber","id","uuidv4","Course","initialCourseName","initialCredit","initialGrade","updateCourse","toggleCourse","removeCourse","isEditing","setIsEditing","courseElement","onClick","CourseList","style","listStyle","marginTop","scaleOptions","mockCourses","App","setCourses","setScale","newCourse","scaleOption","updatedCourses","filter","String","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f03a6e0.chunk.js","sourcesContent":["import { CourseType, ExtendedGradeLetter, GPAScale } from '../types';\n\nexport const getCredits = (courses: CourseType[]): number => {\n  let credits = 0;\n\n  for (const course of courses) {\n    if (course.counted) {\n      credits += course.credit;\n    }\n  }\n\n  return credits;\n};\n\nexport const getGPA = (scale: GPAScale, courses: CourseType[]) => {\n  if (courses.length === 0) {\n    return 0;\n  }\n\n  const credits = getCredits(courses);\n\n  if (credits === 0) {\n    return 0;\n  }\n\n  let gradeSum = 0.0;\n\n  for (const course of courses) {\n    if (course.counted) {\n      gradeSum += getGrade(scale, course.grade) * course.credit;\n    }\n  }\n\n  return gradeSum / credits;\n};\n\nexport const getDisplayedGrade = (scale: GPAScale, grade: number): ExtendedGradeLetter | number => {\n  if (scale === '100') {\n    return grade;\n  }\n\n  if (scale === '4.3') {\n    if (grade >= 90) return 'A+';\n    if (grade >= 85) return 'A';\n    if (grade >= 80) return 'A-';\n    if (grade >= 77) return 'B+';\n    if (grade >= 73) return 'B';\n    if (grade >= 70) return 'B-';\n    if (grade >= 67) return 'C+';\n    if (grade >= 63) return 'C';\n    if (grade >= 60) return 'C-';\n    return 'F';\n  }\n\n  // scale === '4.0'\n  if (grade >= 93) return 'A';\n  if (grade >= 90) return 'A-';\n  if (grade >= 87) return 'B+';\n  if (grade >= 83) return 'B';\n  if (grade >= 80) return 'B-';\n  if (grade >= 77) return 'C+';\n  if (grade >= 73) return 'C';\n  if (grade >= 70) return 'C-';\n  if (grade >= 67) return 'D+';\n  if (grade >= 65) return 'D';\n  return 'F';\n};\n\n// number [0, 100]\nexport const getGrade = (scale: GPAScale, grade: number): number => {\n  if (scale === '100') {\n    return grade;\n  }\n\n  if (scale === '4.3') {\n    if (grade >= 90) return 4.3;\n    if (grade >= 85) return 4.0;\n    if (grade >= 80) return 3.7;\n    if (grade >= 77) return 3.3;\n    if (grade >= 73) return 3.0;\n    if (grade >= 70) return 2.7;\n    if (grade >= 67) return 2.3;\n    if (grade >= 63) return 2.0;\n    if (grade >= 60) return 1.7;\n    return 0.0;\n  }\n\n  // scale === '4.0'\n  if (grade >= 93) return 4.0;\n  if (grade >= 90) return 3.7;\n  if (grade >= 87) return 3.3;\n  if (grade >= 83) return 3.0;\n  if (grade >= 80) return 2.7;\n  if (grade >= 77) return 2.3;\n  if (grade >= 73) return 2.0;\n  if (grade >= 70) return 1.7;\n  if (grade >= 67) return 1.3;\n  if (grade >= 65) return 1.0;\n  return 0.0;\n};\n\nexport const getGradeNumber = (scale: GPAScale, grade: ExtendedGradeLetter): number => {\n  if (scale === '4.3') {\n    if (grade === 'A+') return 95;\n    if (grade === 'A') return 87;\n    if (grade === 'A-') return 82;\n    if (grade === 'B+') return 78;\n    if (grade === 'B') return 75;\n    if (grade === 'B-') return 70;\n    if (grade === 'C+') return 68;\n    if (grade === 'C') return 65;\n    if (grade === 'C-') return 60;\n    return 0;\n  }\n\n  // scale === '4.0'\n  if (grade === 'A') return 93;\n  if (grade === 'A-') return 90;\n  if (grade === 'B+') return 87;\n  if (grade === 'B') return 83;\n  if (grade === 'B-') return 80;\n  if (grade === 'C+') return 77;\n  if (grade === 'C') return 73;\n  if (grade === 'C-') return 70;\n  if (grade === 'D+') return 67;\n  if (grade === 'D') return 65;\n  return 0;\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { CourseType, GradeLetter, GPAScale, ExtendedGradeLetter } from '../../lib/types';\nimport { getGradeNumber } from '../../lib/utils';\n\nimport './index.scss';\n\ninterface Props {\n  scale: GPAScale;\n  addCourse: (newCourse: CourseType) => void;\n}\n\nconst gradeLetters: GradeLetter[] = ['A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-', 'F'];\nconst extendedGradeLetters: ExtendedGradeLetter[] = [\n  'A+',\n  'A',\n  'A-',\n  'B+',\n  'B',\n  'B-',\n  'C+',\n  'C',\n  'C-',\n  'D+',\n  'D',\n  'F',\n];\n\nexport const AddCourseForm = ({ scale, addCourse }: Props) => {\n  const [courseName, setCourseName] = useState('');\n  const [credit, setCredit] = useState('');\n  const [grade, setGrade] = useState('');\n\n  useEffect(() => {\n    setGrade('A+');\n  }, [scale]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // check if entered credit is valid\n    const creditNumber = Number(credit);\n    if (isNaN(creditNumber) || creditNumber < 0) {\n      alert('You must enter a valid credit');\n      return;\n    }\n\n    let gradeNumber: number;\n\n    if (scale === '100') {\n      gradeNumber = Number(grade);\n      if (isNaN(gradeNumber) || gradeNumber < 0 || gradeNumber > 100) {\n        alert('You must enter a valid grade');\n        return;\n      }\n      setGrade('');\n    } else {\n      const gradeLetter = grade as ExtendedGradeLetter;\n      gradeNumber = getGradeNumber(scale, gradeLetter);\n    }\n\n    addCourse({\n      id: uuidv4(),\n      courseName,\n      credit: creditNumber,\n      grade: gradeNumber,\n      counted: true,\n    });\n\n    setCourseName('');\n  };\n\n  const gradeOptions = (scale === '4.3' ? gradeLetters : extendedGradeLetters).map((grade) => {\n    return (\n      <option key={grade} value={grade}>\n        {grade}\n      </option>\n    );\n  });\n\n  let gradeInput: JSX.Element;\n\n  if (scale === '100') {\n    gradeInput = (\n      <input\n        type=\"text\"\n        aria-label=\"Grade\"\n        placeholder=\"95\"\n        required\n        value={grade}\n        onChange={(e) => setGrade(e.target.value)}\n        className=\"grade\"\n      />\n    );\n  } else {\n    gradeInput = (\n      <select name=\"grade\" className=\"grade\" onChange={(e) => setGrade(e.target.value)}>\n        {gradeOptions}\n      </select>\n    );\n  }\n\n  return (\n    <div className=\"new-course-form\">\n      <div className=\"header\">\n        <span className=\"course-name\">Course Name</span>\n        <span className=\"credit\">Credit</span>\n        <span className=\"grade\">Grade</span>\n        <span className=\"dummy\" />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          aria-label=\"Course Name\"\n          placeholder=\"e.g. Linear Algebra\"\n          value={courseName}\n          onChange={(e) => setCourseName(e.target.value)}\n          className=\"course-name\"\n        />\n\n        <input\n          type=\"text\"\n          aria-label=\"Credit\"\n          placeholder=\"3\"\n          required\n          value={credit}\n          onChange={(e) => setCredit(e.target.value)}\n          className=\"credit\"\n        />\n\n        {gradeInput}\n\n        <button className=\"dummy\">\n          <i className=\"fas fa-plus\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n","import React, { Fragment, useState } from 'react';\n\nimport { GPAScale } from '../../lib/types';\nimport { getDisplayedGrade } from '../../lib/utils';\n\nimport './index.scss';\n\ninterface Props {\n  scale: GPAScale;\n  id: string;\n  courseName: string;\n  grade: number;\n  credit: number;\n  counted: boolean;\n  updateCourse: (id: string, courseName: string, grade: number, credit: number) => void;\n  toggleCourse: (id: string) => void;\n  removeCourse: (id: string) => void;\n}\n\nexport const Course = ({\n  scale,\n  id,\n  courseName: initialCourseName,\n  credit: initialCredit,\n  grade: initialGrade,\n  counted,\n  updateCourse,\n  toggleCourse,\n  removeCourse,\n}: Props) => {\n  const [courseName, setCourseName] = useState(initialCourseName);\n  const [credit, setCredit] = useState(initialCredit);\n  const [grade, setGrade] = useState(initialGrade);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const handleUpdate = (e: React.FormEvent) => {\n    e.preventDefault();\n    updateCourse('', courseName, grade, credit);\n    setIsEditing(false);\n  };\n\n  const courseElement = isEditing ? (\n    <form onSubmit={handleUpdate}>\n      <input\n        placeholder=\"Course Name\"\n        aria-label=\"Course Name\"\n        value={courseName}\n        onChange={(e) => setCourseName(e.target.value)}\n        className=\"course-name\"\n      />\n\n      <input\n        placeholder=\"Credit\"\n        aria-label=\"Credit\"\n        required\n        value={credit}\n        onChange={(e) => setCredit(Number(e.target.value))}\n        className=\"credit\"\n      />\n\n      <input\n        placeholder=\"Grade\"\n        aria-label=\"Grade\"\n        required\n        value={grade}\n        onChange={(e) => setGrade(Number(e.target.value))}\n        className=\"grade\"\n      />\n      <button>Save</button>\n    </form>\n  ) : (\n    <Fragment>\n      <span onClick={() => toggleCourse(id)} className={counted ? '' : 'striked'}>\n        {courseName} ({credit}): {getDisplayedGrade(scale, grade)}\n      </span>\n      <div className=\"buttons\">\n        <button onClick={() => setIsEditing(!isEditing)}>\n          <i className=\"fas fa-pen\" />\n        </button>\n        <button onClick={() => removeCourse(id)}>\n          <i className=\"fas fa-trash\" />\n        </button>\n      </div>\n    </Fragment>\n  );\n\n  return (\n    <li className=\"course\" id={id}>\n      {courseElement}\n    </li>\n  );\n};\n","import React from 'react';\n\nimport { CourseType, GPAScale } from '../../lib/types';\nimport { Course } from '../Course';\n\nimport './index.scss';\n\ninterface Props {\n  scale: GPAScale;\n  courses: CourseType[];\n  updateCourse: (id: string, courseName: string, grade: number, credit: number) => void;\n  toggleCourse: (id: string) => void;\n  removeCourse: (id: string) => void;\n}\n\nexport const CourseList = ({ scale, courses, updateCourse, toggleCourse, removeCourse }: Props) => {\n  return courses ? (\n    <ul style={{ listStyle: 'none', marginTop: '1rem' }}>\n      {courses.map((course) => {\n        return (\n          <Course\n            scale={scale}\n            key={course.id}\n            id={course.id}\n            courseName={course.courseName}\n            grade={course.grade}\n            credit={course.credit}\n            counted={course.counted}\n            updateCourse={updateCourse}\n            toggleCourse={toggleCourse}\n            removeCourse={removeCourse}\n          />\n        );\n      })}\n    </ul>\n  ) : null;\n};\n","import React, { useState } from 'react';\n\nimport { AddCourseForm } from './components';\nimport { CourseList } from './components/CourseList';\nimport { CourseType, GPAScale } from './lib/types';\nimport { getCredits, getGPA } from './lib/utils';\n\nimport './App.scss';\n\nconst scaleOptions: GPAScale[] = ['100', '4.0', '4.3'];\n\nconst mockCourses: CourseType[] = [\n  { id: '1', courseName: 'LA', credit: 3, grade: 100, counted: true },\n  { id: '2', courseName: 'DSA', credit: 3, grade: 97, counted: false },\n  { id: '3', courseName: 'OS', credit: 3, grade: 83, counted: true },\n];\n\nexport const App = () => {\n  const [courses, setCourses] = useState<CourseType[]>(mockCourses);\n  const [scale, setScale] = useState<GPAScale>('4.3');\n\n  const addCourse = (newCourse: CourseType) => {\n    setCourses([...courses, newCourse]);\n  };\n\n  const updateCourse = (id: string, courseName: string, grade: number, credit: number) => {\n    const updatedCourses = courses.map((course) => {\n      return course.id === id ? { ...course, courseName, credit, grade } : course;\n    });\n    setCourses(updatedCourses);\n  };\n\n  const toggleCourse = (id: string) => {\n    const updatedCourses = courses.map((course) => {\n      return course.id === id ? { ...course, counted: !course.counted } : course;\n    });\n    setCourses(updatedCourses);\n  };\n\n  const removeCourse = (id: string) => {\n    const updatedCourses = courses.filter((course) => course.id !== id);\n    setCourses(updatedCourses);\n  };\n\n  const renderScales = () => {\n    return scaleOptions.map((scaleOption) => {\n      return (\n        <button\n          key={scaleOption}\n          className={scaleOption === scale ? 'btn btn-selected' : 'btn'}\n          onClick={() => setScale(scaleOption)}\n        >\n          {scaleOption}\n        </button>\n      );\n    });\n  };\n\n  return (\n    <div id=\"app\">\n      <h1>\n        GPA Calculator\n        <span>Enter courses to calculate your GPA 🧐</span>\n      </h1>\n      <AddCourseForm scale={scale} addCourse={addCourse} />\n      <div className=\"btns-container\">{renderScales()}</div>\n      <CourseList\n        scale={scale}\n        courses={courses}\n        updateCourse={updateCourse}\n        toggleCourse={toggleCourse}\n        removeCourse={removeCourse}\n      />\n      <h2>\n        Your GPA: {String(getGPA(scale, courses)).slice(0, 5)}\n        <br />\n        Total credits: {getCredits(courses)}\n      </h2>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}